apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-server
  labels:
    app: fluentum
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs: ["get", "list", "watch"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-server
  labels:
    app: fluentum
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-server
  labels:
    app: fluentum
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-server
subjects:
  - kind: ServiceAccount
    name: prometheus-server
    namespace: fluentum-system
---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: prometheus
  labels:
    app: fluentum
spec:
  image: docker.io/fluentumregistry/prometheus:v2.48.1
  serviceAccountName: prometheus-server
  enableFeatures:
    - remote-write-receiver
  enableRemoteWriteReceiver: true
  enableAdminAPI: false
  externalUrl: https://prometheus.cp.fluentum.aegislabs.work
  securityContext:
    runAsUser: 1000
    runAsNonRoot: true
    runAsGroup: 65534
    fsGroup: 2000
  storage:
    volumeClaimTemplate:
      metadata:
        name: prometheus-data
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: do-block-storage
        resources:
          requests:
            storage: 100Gi
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  labels:
    app: fluentum
spec:
  ports:
    - name: prometheus
      port: 9090
      targetPort: 9090
      protocol: TCP
  selector:
    prometheus: prometheus
  type: ClusterIP
